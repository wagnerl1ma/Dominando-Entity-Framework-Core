// <auto-generated />
using System;
using DominandoEFCore_Modulo4_ModeloDados.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DominandoEFCore_Modulo4_ModeloDados.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230104003624_TestePropragacaoDados")]
    partial class TestePropragacaoDados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Configuracoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Configuracoes");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Ator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Atores");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Conversor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("EnderecoIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Versao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Conversores");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("_cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("CPF");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Sao Paulo"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Sergipe"
                        });
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Governador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EstadoReference")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Partido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoReference")
                        .IsUnique();

                    b.ToTable("Governador");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas", (string)null);
                });

            modelBuilder.Entity("FilmesAtores", b =>
                {
                    b.Property<int>("AtorId")
                        .HasColumnType("int");

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CadastradoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("AtorId", "FilmeId");

                    b.HasIndex("FilmeId");

                    b.ToTable("FilmesAtores");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Aluno", b =>
                {
                    b.HasBaseType("DominandoEFCore_Modulo4_ModeloDados.Domain.Pessoa");

                    b.Property<DateTime>("DataContrato")
                        .HasColumnType("datetime2");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Instrutor", b =>
                {
                    b.HasBaseType("DominandoEFCore_Modulo4_ModeloDados.Domain.Pessoa");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tecnologia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Instrutores", (string)null);
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Cidade", b =>
                {
                    b.HasOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Cliente", b =>
                {
                    b.OwnsOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Enderecos", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Funcionario", b =>
                {
                    b.HasOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Departamento", "Departamento")
                        .WithMany("Funcionarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Governador", b =>
                {
                    b.HasOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Estado", "Estado")
                        .WithOne("Governador")
                        .HasForeignKey("DominandoEFCore_Modulo4_ModeloDados.Domain.Governador", "EstadoReference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("FilmesAtores", b =>
                {
                    b.HasOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Ator", null)
                        .WithMany()
                        .HasForeignKey("AtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Aluno", b =>
                {
                    b.HasOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("DominandoEFCore_Modulo4_ModeloDados.Domain.Aluno", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Instrutor", b =>
                {
                    b.HasOne("DominandoEFCore_Modulo4_ModeloDados.Domain.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("DominandoEFCore_Modulo4_ModeloDados.Domain.Instrutor", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Departamento", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("DominandoEFCore_Modulo4_ModeloDados.Domain.Estado", b =>
                {
                    b.Navigation("Cidades");

                    b.Navigation("Governador")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
